Часть 1. Инициализация:

Создать и программно инициализировать БД со списком стран.

Каждая страна должна описываться в базе данных названием, кодом, географическими координатами и набором границ с соседними странами

в качестве исходных данных использовать данный файл:

https://raw.githubusercontent.com/mledoze/countries/master/countries.json
Код страны - поле cca3

Часть 2. Реализация:
Задача:

Реализовать систему расчета маршрута, проходящего через несколько стран.


Кроме основной функции(возможности рассчитать маршрут), система должна иметь следующие:

- Добавление стран в систему

- Получение списка стран

- Редактирование сохраненных стран

- Удаление стран


Рекомендуется создать для каждой функции отдельный REST endpoint.


Для функции расчета маршрута, API должен выглядеть так:
/routing/{algorithm}/{from}/{to}, где

algorithm - некоторое имя/код/сокращенное название алгоритма используемое для расчета(вполне достаточно реализовать лишь один на ваш выбор)
from - код страны начала маршрута (например BLR)
to - код страны в конечной точке маршрута

Пример: GET /routing/bfs/CZE/ITA HTTP/1.0: => {"route": ["CZE","AUT","ITA"​]}


В случае, когда маршрут построить невозможно, endpoint должен возвращать HTTP 400.

Дополнительным плюсом будет покрытие тестами(хотя-бы 1 эндпоинт, сервис, сам  алгоритм)


Используемые технологии:

Java 8+, Spring BOOT.
Сервер баз данных: приветствуется любая встроенная Java-RDBMS, например H2, HSQLDB, Derby. При невозможности - предоставляйте скрипт для генерации БД и тестовых данных.

Постарайтесь создать грамотную композицию классов и форматировать код в соответствии со стандартами Java. Не забывайте про SOLID, принципы построения REST API и возможности Java 8+.